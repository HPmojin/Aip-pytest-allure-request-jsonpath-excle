{"uid":"7055c8a6fcf561dc","name":"根据 ID 查询商品","fullName":"test_caes.test_001.Test#test_001","historyId":"9347219076fd0d53d7f9f75430126c4b","time":{"start":1663734246427,"stop":1663734246454,"duration":27},"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001F1433D59C0>>({'data': {'add_time': 1663731097, 'attrs': [{'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}, {'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}], 'cat_id': 3, 'cat_one_id': 1, ...}, 'meta': {'msg': '获取成功', 'status': 200}}, ['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', ...], <common.db.DB object at 0x000001F143296680>)\n +    where <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001F1433D59C0>> = <common.assert_api.AssertApi object at 0x000001F1433D59C0>.assert_api\n +      where <common.assert_api.AssertApi object at 0x000001F1433D59C0> = AssertApi()","statusTrace":"self = <test_caes.test_001.Test object at 0x000001F143296380>\ncase = ['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', ...]\nget_db = <common.db.DB object at 0x000001F143296680>\n\n    @pytest.mark.parametrize(\"case\",Sheet)\n    def test_001(self,case,get_db):#,get_db\n    \n        response=(Api_Request.api_data(case))\n    \n>       assert AssertApi().assert_api(response,case,get_db)#,get_db\nE       assert False\nE        +  where False = <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001F1433D59C0>>({'data': {'add_time': 1663731097, 'attrs': [{'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}, {'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}], 'cat_id': 3, 'cat_one_id': 1, ...}, 'meta': {'msg': '获取成功', 'status': 200}}, ['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', ...], <common.db.DB object at 0x000001F143296680>)\nE        +    where <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001F1433D59C0>> = <common.assert_api.AssertApi object at 0x000001F1433D59C0>.assert_api\nE        +      where <common.assert_api.AssertApi object at 0x000001F1433D59C0> = AssertApi()\n\ntest_caes\\test_001.py:27: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1663734246226,"stop":1663734246293,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"get_db","time":{"start":1663734246293,"stop":1663734246295,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001F1433D59C0>>({'data': {'add_time': 1663731097, 'attrs': [{'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}, {'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}], 'cat_id': 3, 'cat_one_id': 1, ...}, 'meta': {'msg': '获取成功', 'status': 200}}, ['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', ...], <common.db.DB object at 0x000001F143296680>)\n +    where <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001F1433D59C0>> = <common.assert_api.AssertApi object at 0x000001F1433D59C0>.assert_api\n +      where <common.assert_api.AssertApi object at 0x000001F1433D59C0> = AssertApi()","statusTrace":"self = <test_caes.test_001.Test object at 0x000001F143296380>\ncase = ['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', ...]\nget_db = <common.db.DB object at 0x000001F143296680>\n\n    @pytest.mark.parametrize(\"case\",Sheet)\n    def test_001(self,case,get_db):#,get_db\n    \n        response=(Api_Request.api_data(case))\n    \n>       assert AssertApi().assert_api(response,case,get_db)#,get_db\nE       assert False\nE        +  where False = <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001F1433D59C0>>({'data': {'add_time': 1663731097, 'attrs': [{'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}, {'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}], 'cat_id': 3, 'cat_one_id': 1, ...}, 'meta': {'msg': '获取成功', 'status': 200}}, ['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', ...], <common.db.DB object at 0x000001F143296680>)\nE        +    where <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001F1433D59C0>> = <common.assert_api.AssertApi object at 0x000001F1433D59C0>.assert_api\nE        +      where <common.assert_api.AssertApi object at 0x000001F1433D59C0> = AssertApi()\n\ntest_caes\\test_001.py:27: AssertionError","steps":[{"name":"请求数据：","time":{"start":1663734246430,"stop":1663734246431,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"25f2fad3679884b1","name":"附件内容","source":"25f2fad3679884b1.json","type":"application/json","size":392}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"stepsCount":0},{"name":"响应数据：","time":{"start":1663734246448,"stop":1663734246449,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"a6d335479c5661d5","name":"附件内容","source":"a6d335479c5661d5.json","type":"application/json","size":1364}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"stepsCount":0},{"name":"提取参数路径：","time":{"start":1663734246449,"stop":1663734246450,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"dad30196da99d7ca","name":"附件内容","source":"dad30196da99d7ca.json","type":"application/json","size":2}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"stepsCount":0},{"name":"参数池数据：","time":{"start":1663734246451,"stop":1663734246452,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"ab85a2bb5d53844","name":"附件内容","source":"ab85a2bb5d53844.json","type":"application/json","size":218}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"stepsCount":0},{"name":"断言：False","time":{"start":1663734246453,"stop":1663734246453,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"5e8b3e3bd307d6f5","name":"断言：False：","source":"5e8b3e3bd307d6f5.json","type":"application/json","size":96}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"stepsCount":0}],"attachments":[{"uid":"b075abc3df34a501","name":"log","source":"b075abc3df34a501.txt","type":"text/plain","size":4073}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":6,"hasContent":true,"stepsCount":5},"afterStages":[{"name":"get_db::0","time":{"start":1663734247069,"stop":1663734247069,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"labels":[{"name":"story","value":"2-商品测试"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"test_caes"},{"name":"suite","value":"test_001"},{"name":"subSuite","value":"Test"},{"name":"host","value":"huangpeng"},{"name":"thread","value":"13912-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_caes.test_001"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', 'get', 'params', '', '{}', '', '', '{}', '2-商品测试']"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7055c8a6fcf561dc.json","parameterValues":["['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', 'get', 'params', '', '{}', '', '', '{}', '2-商品测试']"]}