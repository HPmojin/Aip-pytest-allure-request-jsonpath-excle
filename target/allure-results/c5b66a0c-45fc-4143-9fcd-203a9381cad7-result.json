{"name": "根据 ID 查询商品", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001198F3B0EE0>>({'data': {'add_time': 1663732454, 'attrs': [{'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}, {'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}], 'cat_id': 3, 'cat_one_id': 1, ...}, 'meta': {'msg': '获取成功', 'status': 200}}, ['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', ...], <common.db.DB object at 0x000001198F275960>)\n +    where <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001198F3B0EE0>> = <common.assert_api.AssertApi object at 0x000001198F3B0EE0>.assert_api\n +      where <common.assert_api.AssertApi object at 0x000001198F3B0EE0> = AssertApi()", "trace": "self = <test_caes.test_001.Test object at 0x000001198F277460>\ncase = ['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', ...]\nget_db = <common.db.DB object at 0x000001198F275960>\n\n    @pytest.mark.parametrize(\"case\",Sheet)\n    def test_001(self,case,get_db):#,get_db\n        # 需要执行sql查询断言时，参数中添加get_db\n        # 不需要执行sql查询断言时，参数中去掉get_db\n    \n        response=(Api_Request.api_data(case))\n    \n        # 需要执行sql查询断言时，参数中添加get_db\n        # 不需要执行sql查询断言时，参数中去掉get_db\n>       assert AssertApi().assert_api(response,case,get_db)#,get_db\nE       assert False\nE        +  where False = <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001198F3B0EE0>>({'data': {'add_time': 1663732454, 'attrs': [{'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}, {'add_price': None, 'attr_id': 15, 'attr_name': '主观参数-品牌', 'attr_sel': 'only', ...}], 'cat_id': 3, 'cat_one_id': 1, ...}, 'meta': {'msg': '获取成功', 'status': 200}}, ['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', ...], <common.db.DB object at 0x000001198F275960>)\nE        +    where <bound method AssertApi.assert_api of <common.assert_api.AssertApi object at 0x000001198F3B0EE0>> = <common.assert_api.AssertApi object at 0x000001198F3B0EE0>.assert_api\nE        +      where <common.assert_api.AssertApi object at 0x000001198F3B0EE0> = AssertApi()\n\ntest_caes\\test_001.py:31: AssertionError"}, "steps": [{"name": "请求数据：", "status": "passed", "attachments": [{"name": "附件内容", "source": "b1efa9c0-3777-495d-a6bc-3a16c932f141-attachment.json", "type": "application/json"}], "start": 1663743364420, "stop": 1663743364421}, {"name": "响应数据：", "status": "passed", "attachments": [{"name": "附件内容", "source": "78ffeadb-ab04-4d64-89ba-e7c30d3ad2fd-attachment.json", "type": "application/json"}], "start": 1663743364441, "stop": 1663743364442}, {"name": "提取参数路径：", "status": "passed", "attachments": [{"name": "附件内容", "source": "e5394ba4-8e9c-4289-8872-57af5b4005d2-attachment.json", "type": "application/json"}], "start": 1663743364442, "stop": 1663743364442}, {"name": "参数池数据：", "status": "passed", "attachments": [{"name": "附件内容", "source": "d3db1d1f-c46e-456e-bb64-f61ea0d36979-attachment.json", "type": "application/json"}], "start": 1663743364443, "stop": 1663743364444}, {"name": "断言：False", "status": "passed", "attachments": [{"name": "断言：False：", "source": "575616b4-6070-4f55-b970-2ad4afec56d3-attachment.json", "type": "application/json"}], "start": 1663743364444, "stop": 1663743364446}], "attachments": [{"name": "log", "source": "9e50ac01-7feb-46d5-9fea-0af6b15cfd5f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "['c4', '根据 ID 查询商品', '{\"Authorization\": \"${token}\"}', 'goods/${goods_id}', 'P2', '\"${token}\"!=\"\";\"${goods_id}\"!=\"\"', 'get', 'params', '', '{}', '', '', '{}', '2-商品测试']"}], "start": 1663743364415, "stop": 1663743364446, "uuid": "74303519-72a0-4d51-92ad-bce43d15ae28", "historyId": "9347219076fd0d53d7f9f75430126c4b", "testCaseId": "0ce9b864120c65f3d4857e62ac9d3295", "fullName": "test_caes.test_001.Test#test_001", "labels": [{"name": "story", "value": "2-商品测试"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "test_caes"}, {"name": "suite", "value": "test_001"}, {"name": "subSuite", "value": "Test"}, {"name": "host", "value": "huangpeng"}, {"name": "thread", "value": "15000-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_caes.test_001"}]}